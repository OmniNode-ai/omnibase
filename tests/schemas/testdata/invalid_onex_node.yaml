# === OmniNode:Metadata ===
# metadata_version: 0.1.0
# protocol_version: 0.1.0
# owner: OmniNode Team
# copyright: OmniNode.ai
# schema_version: 0.1.0
# name: invalid_onex_node.yaml
# version: 1.0.0
# uuid: d51a4d2c-bc49-44d5-a719-7f8c16d18934
# author: OmniNode Team
# created_at: 2025-05-21T12:41:40.171062
# last_modified_at: 2025-05-21T16:42:46.043149
# description: Stamped by MetadataYAMLHandler
# state_contract: state_contract://default
# lifecycle: active
# hash: dffe8cadad451f1abb13f3eef6213efca6ea59cdbee32e2f97557b77e7a1537e
# entrypoint: {'type': 'python', 'target': 'invalid_onex_node.yaml'}
# runtime_language_hint: python>=3.11
# namespace: onex.stamped.invalid_onex_node
# meta_type: tool
# === /OmniNode:Metadata ===

---
schema_version: not-a-semver  # invalid pattern
name: 123                      # should be string
version: "1.0"                 # invalid semver
uuid: not-a-uuid                # invalid uuid
author: foundation
created_at: 2025-05-17          # not ISO 8601
last_modified_at: "2025-05-17T10:15:00Z"
description: 42                 # should be string
state_contract: 123             # should be string
lifecycle: invalid_status       # not in enum
hash: short                     # not 64 hex chars
entrypoint:
  type: invalid_type
  target: 123
namespace: invalid namespace    # does not match pattern
meta_type: unknown              # not in enum
trust_score: high               # should be number
capabilities: validate          # should be array
tags: 123                       # should be array
protocols_supported:
  - 123                         # should be string array
dependencies:
  - name: 123                   # should be string
    type: unknown_type          # not in enum
    target: 456                 # should be string
    binding: unknown_binding    # not in enum
inputs:
  - name: input_data
    schema_ref: 456                 # should be string
    required: true
    format_hint: json
outputs:
  - name: output_result
    schema_ref: 456                 # should be string
    format_hint: json
# testing block intentionally omitted or malformed for negative test
# ... existing code ...
