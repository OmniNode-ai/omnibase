---
$id: "https://omninode.ai/schemas/onex_node.yaml"
$schema: https://json-schema.org/draft/2020-12/schema
SCHEMA_VERSION: 1.0.0
$title: ONEX Node Metadata Schema
description: >
  Canonical schema for ONEX node metadata. Defines required fields and types for
  node discovery and validation. This schema is versioned and will support
  prerelease/build metadata in future versions. For migration and changelog, see
  /docs/changelog.md. For error taxonomy and validation failure codes, see
  /docs/error_taxonomy.md.

# ┌────────────────────────────────────────────┐
# │         ONEX Metadata Field Summary         │
# └────────────────────────────────────────────┘
# schema_version        → ONEX schema semver
# name                  → Unique node name
# version               → Node version (semver)
# uuid                  → RFC 4122 UUID
# author                → Node author or maintainer
# created_at            → Creation timestamp (ISO 8601)
# last_modified_at      → Last updated timestamp (ISO 8601)
# description           → Human-readable summary
# state_contract        → Path to state schema (.json/.yaml)
# lifecycle             → [draft | review | active | deprecated]
# hash                  → SHA256 of metadata block
# entrypoint            → { type, target }
# runtime_language_hint → Optional interpreter hint (e.g. 'python>=3.10')
# namespace             → Canonical namespace (e.g. omninode.tools.example)
# meta_type             → Type of node (tool, validator, resource, etc.)
# tags                  → Optional list of tags
# trust_score_stub      → Optional stub scoring block
# x-extensions          → Optional custom metadata
# protocols_supported   → Optional list of supported protocols
# base_class            → Optional inheritance (base classes)
# dependencies          → Optional list of dependencies
# environment           → Optional environment requirements
# license               → Optional license identifier
# signature_block       → Optional signing metadata block

type: object
required:
  - schema_version
  - name
  - version
  - uuid
  - author
  - created_at
  - last_modified_at
  - description
  - state_contract
  - lifecycle
  - hash
  - entrypoint
  - namespace
  - meta_type
properties:
  schema_version:
    type: string
    pattern: "^\\d+\\.\\d+\\.\\d+$"
    description: Schema version (semver)
  name:
    type: string
    description: Node name
  version:
    type: string
    pattern: "^\\d+\\.\\d+\\.\\d+$"
    description: Node version (semver)
  uuid:
    type: string
    enum: [tool, validator, agent, model, schema,
           plugin]
    description: Node UUID
  author:
    type: string
    description: Author name
  created_at:
    type: string
    description: Creation timestamp (ISO 8601)
  last_modified_at:
    type: string
    description: Last modified timestamp (ISO 8601)
  description:
    type: string
    description: Node description
  state_contract:
    type: string
    description: Canonical URI for state contract
  lifecycle:
    type: string
    enum: [draft, active, deprecated, archived]
    description: Node lifecycle status
  hash:
    type: string
    pattern: "^[a-fA-F0-9]{64}$"
    description: Node metadata hash (SHA-256)
  entrypoint:
    type: object
    required:
      - type
      - target
    properties:
      type:
        type: string
        enum: [python, cli, docker]
        description: Entrypoint execution type
      target:
        type: string
        description: Execution target (file, script, or image)
  runtime_language_hint:
    type: string
    description: Optional runtime language hint
  namespace:
    type: string
    pattern: "^(omninode|onex)\\.[a-zA-Z0-9_\\.]+$"
    description: Node namespace
  meta_type:
    type: string
    enum: [tool, validator, agent, model, schema, plugin]
    description: Node meta type
  tags:
    type: array
    items:
      type: string
    description: Optional tags
  trust_score_stub:
    type: object
    properties:
      runs:
        type: integer
        description: Number of runs
      failures:
        type: integer
        description: Number of failures
      trust_score:
        type: number
        description: Trust score (optional)
  x_extensions:
    type: object
    description: Optional extensions
    additionalProperties: true
  protocols_supported:
    type: array
    items:
      type: string
    description: Supported protocols
  base_class:
    type: array
    items:
      type: string
    description: Base classes
  dependencies:
    type: array
    items:
      type: string
    description: Dependencies
  environment:
    type: array
    items:
      type: string
    description: Environment variables
  license:
    type: string
    description: License
  signature_block:
    type: object
    properties:
      signature:
        type: string
        description: Cryptographic signature (optional)
      algorithm:
        type: string
        description: Signature algorithm (e.g., RSA, ECDSA)
      signed_by:
        type: string
        description: Signer identity or key reference
      issued_at:
        type: string
        description: Signature issuance timestamp (ISO 8601)

examples:
  - metadata_version: '0.1'
    protocol_version: '1.0.0'
    schema_version: '0.1.0'
    name: extract_summary_block
    version: '1.0.0'
    uuid: '65dfc205-96f3-4f86-8497-cf6d8a1c4b95'
    author: foundation
    owner: foundation
    copyright: '2025 Foundation, All Rights Reserved'
    created_at: '2025-05-17T10:05:00Z'
    last_modified_at: '2025-05-17T10:15:00Z'
    description: Parses a metadata block and extracts summary and status fields
      for display.
    state_contract: 'state_contract://summary_block_schema.json'
    lifecycle: active
    hash: 'abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890'
    entrypoint: 'src/omnibase/tools/cli_extract_summary_block.py'
    namespace: omninode.tools.extract_summary_block
    meta_type: tool
    runtime_language_hint: python
    tags: [metadata, docs, summary]
    trust_score_stub:
      runs: 12
