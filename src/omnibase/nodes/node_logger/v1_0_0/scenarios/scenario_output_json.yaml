---
scenario_name: "NodeLogger Output Format - JSON"
config:
  scenario_config_version: 1.0.0
  registry_tools:
    backend_selection: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_backend_selection.StubBackendSelection
    inmemory: !!python/name:omnibase.runtimes.onex_runtime.v1_0_0.events.event_bus_in_memory.InMemoryEventBus
    logger_engine: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_logger_engine.ToolLoggerEngine
    context_aware_output_handler: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_context_aware_output_handler.ToolContextAwareOutputHandler
    text: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_text_format.ToolTextFormat
    json: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_json_format.ToolJsonFormat
    yaml: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_yaml_format.ToolYamlFormat
    markdown: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_markdown_format.ToolMarkdownFormat
    csv: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_csv_format.ToolCsvFormat
description: "Scenario to validate JSON output formatting."
scenario_type: "output"
tags: ["output", "format", "json"]
version: v1.0.0
created_by: "auto"
node_versions:
  node_logger: ">=1.0.0,<2.0.0"
chain:
  - node: node_logger
    input:
      version: {major: 1, minor: 0, patch: 0}
      log_level: info
      message: "Output format test (json)"
      output_format: json
      context: {"test": "output_format"}
      tags: ["output"]
      correlation_id: "output-format-json-123"
      timestamp: "2025-06-10T12:10:00Z"
    expect:
      version: {major: 1, minor: 0, patch: 0}
      status: success
      message: "Log entry processed successfully"
      formatted_log: "..."
      output_format: json
      timestamp: "2025-06-10T12:10:00Z"
      log_level: info
      entry_size: 0 