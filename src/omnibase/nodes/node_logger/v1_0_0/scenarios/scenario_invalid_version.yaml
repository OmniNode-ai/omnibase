---
expected_validation: fail
scenario_name: "NodeTemplate Invalid Version"
description: "Scenario to validate error handling for invalid version string."
scenario_type: "error"
tags: ["error", "version"]
version: v1.0.0
created_by: "auto"
node_versions:
  node_template: ">=1.0.0,<2.0.0"
chain:
  - node: node_template
    input:
      version:
        major: 1
        minor: 0
        patch: 0
      input_field: test
      optional_field:
        data:
          value: "optional"
    expect:
      version:
        major: 1
        minor: 0
        patch: 0
      status: error
      message: "Input should have required field 'major'"
      output_field:
        data: {}
    partial: true
registry_tools:
  backend_selection: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_backend_selection.StubBackendSelection
  inmemory: !!python/name:omnibase.runtimes.onex_runtime.v1_0_0.events.event_bus_in_memory.InMemoryEventBus
  logger_engine: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_logger_engine.ToolLoggerEngine
  context_aware_output_handler: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_context_aware_output_handler.ToolContextAwareOutputHandler
  text: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_text_format.ToolTextFormat
  json: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_json_format.ToolJsonFormat
  yaml: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_yaml_format.ToolYamlFormat
  markdown: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_markdown_format.ToolMarkdownFormat
  csv: !!python/name:omnibase.nodes.node_logger.v1_0_0.tools.tool_csv_format.ToolCsvFormat 