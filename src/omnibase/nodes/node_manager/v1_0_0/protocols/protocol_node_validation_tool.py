from typing import Protocol
from omnibase.enums.enum_validation_result import EnumValidationResult
from omnibase.enums.enum_validation_type import EnumValidationType
from omnibase.nodes.node_manager.v1_0_0.models import ModelDiscoveredNode

class ProtocolNodeValidationTool(Protocol):
    def validate_cli_node_parity(self, node: ModelDiscoveredNode) -> EnumValidationResult: ...
    def validate_schema_conformance(self, node: ModelDiscoveredNode) -> EnumValidationResult: ...
    def validate_error_code_usage(self, node: ModelDiscoveredNode) -> EnumValidationResult: ...
    def validate_contract_compliance(self, node: ModelDiscoveredNode) -> EnumValidationResult: ...
    def validate_introspection_validity(self, node: ModelDiscoveredNode) -> EnumValidationResult: ...
    def validate(self, node: ModelDiscoveredNode, validation_type: EnumValidationType) -> EnumValidationResult: ... 