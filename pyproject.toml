[tool.poetry]
name = "omnibase"
version = "0.1.0"
description = "ONEX/OmniBase Bootstrap â€“ Canonical Node Architecture and CLI"
authors = ["OmniBase Team <team@omnibase.org>"]
readme = "README.md"
package-mode = true

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
pyyaml = "^6.0.0"
jsonschema = "^4.21.1"
pydantic = "^2.0.0"
typer = "^0.12.3"
typing-extensions = "^4.13.2"
click = "<8.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
black = "^24.2.0"
isort = "^5.13.2"
mypy = "^1.15.0"
pre-commit = "^4.2.0"
pytest-mock = "^3.12.0"
pytest-cov = "^6.1.1"
pydocstyle = "^6.3.0"
docformatter = "^1.7.5"
types-pyyaml = "^6.0.12.20250402"
types-requests = "^2.32.0.20250328"
types-toml = "^0.10.8.20240310"
pytest-env = "^1.1.5"
typing-extensions = "^4.13.2"
pyyaml = "^6.0.2"
jinja2 = "^3.1.6"
types-jsonschema = "^4.23.0.20250516"
ruff = "0.4.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.poetry.scripts]
onex = "omnibase.tools.cli_main:app"

[[tool.poetry.packages]]
include = "omnibase"
from = "src"